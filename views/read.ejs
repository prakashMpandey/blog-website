<%- include("header",{user:user}) -%>
<style>
body {
    font-family: Arial, sans-serif;
    background-color: #f4f4f4;
    margin: 0;
    padding: 0;
}
.container {
    margin: 0 auto;
    padding: 25px;
    max-width: 60vw;
}

.header {
    margin-bottom: 20px;
    font-size: 2.5em;
    background-color: #fff;
    color: black;
}
.blog-post {
    background: #fff;
    margin: 20px 0;
    padding: 30px;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}
.blog-post p {
    line-height: 1.6;
}

.blog-post a {
    text-decoration: none;
    color: black;
}
.social {
    margin: 10px 10px;
}
.comment-container {
    background-color: #fff;
    box-shadow: 0px 3px 3px 3px #d3bdbd;
    visibility: hidden;
    padding: 20px;
    margin-top: 20px;
    border-radius: 8px;
}
.comment-container h2 {
    margin-top: 0;
}
#comment-input {
    width: 100%;
    background: #fff;
    border: 1px solid #ccc;
    padding: 10px;
    margin-bottom: 10px;
    border-radius: 4px;
}
#comment-btn {
    background-color: rgb(8, 123, 8);
    color: white;
    padding: 10px 20px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
}
.comment-content {
    margin-top: 20px;
}
.comment {
    border-bottom: 1px solid #3c3b3b;
    padding: 10px 0;
    
    display: grid;
}
.comment .comment-avatar {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    margin-right: 10px;
    float: left;
}
.comment .author {
    font-weight: bold;
    margin-right: 10px;
}
.comment .content {
    margin-top: 10px;
    clear: both;
}

.delete-btn {
    background-color: rgb(232, 51, 123);
    color: white;
    padding: 10px 20px;
    border: none;
  justify-self: right;
    border-radius: 4px;
    cursor: pointer;
}
.delete-btn:hover {
    background-color: #c0392b;
}

</style>

<div class="container">
    <div class="blog-post">
        <div class="header">
            <h1 class="font1" style="text-transform: capitalize;"><%= post.title %></h1>
            <hr>
        </div>

        <div class="blogpost-meta">
            <div class="author-info">
                <div>
                    <b>Author - <%= author.username %></b>
                </div>
                <div><%= post.createdAt %>. 6 min read</div>
            </div>
            <div class="social">
                <!-- Social icons here -->
            </div>
        </div>
        <br><br><br>
        <div style="margin-bottom: 20p; font-size: 16px;">
            <% let essay = post.content.split(/\s+/); %>
            <% let paragraph = ''; %>
            <% let paragraphs = []; %>
            <% let limit = 150; %>

            <% essay.forEach(word => { %>
                <% if ((paragraph + word).split(' ').length <= limit) { %>
                    <% paragraph += word + ' '; %>
                <% } else { %>
                    <% paragraphs.push(paragraph.trim()); %>
                    <% paragraph = word + ' '; %>
                <% } %>
            <% }); %>

            <% if (paragraph.trim()) { %>
                <% paragraphs.push(paragraph.trim()); %>
            <% } %>

            <% paragraphs.forEach(para => { %>
                <p class="font1"><%= para %></p>
            <% }) %>
        </div>
        
        <hr>
        <button id="like-button" class=" " data-id="<%= post._id %>">
            <i class="fas fa-thumbs-up"></i>
        </button>
        <button id="comment-button" class="buttons" data-id="<%= post._id %>">
            <i class="fa-regular fa-comments"></i>
        </button>
    </div>
    
    <div class="comment-container">
        <h2>Write a Comment</h2>
        <form id="commentForm">
            <textarea id="comment-input" name="content" placeholder="Add a Comment" type="text"></textarea>
            <button type="submit" id="comment-btn">Comment</button>
        </form>
       
        <div class="comment-content"></div>
    </div>
</div>

<%- include("footer") -%>

<script>
document.addEventListener('DOMContentLoaded', () => {
    const button = document.getElementById('like-button');
    const postId = button.getAttribute('data-id');
    const commentForm=document.getElementById("commentForm")
    const input = document.getElementById("comment-input");
    const commentBox = document.querySelector(".comment-container");
    const commentContent=document.querySelector(".comment-content")
   
    button.addEventListener('click', async () => {
        const isLiked = button.classList.contains('liked');

        try {
            const response = await fetch(`/api/v1/post/like/${postId}`, { method: "POST" });
            const data = await response.json();
            if (data) {
                button.classList.toggle('liked');
            }
        } catch (error) {
            console.error('Error:', error);
        }
    });
 

    (async () => {
        try {
            const response = await fetch(`/api/v1/post/like/${postId}/status`, { method: 'GET' });
            const data = await response.json();
            if (data.isAlreadyLiked) {
                button.classList.add('liked');
            }
        } catch (error) {
            console.error('Error:', error);
        }
    })();


  

    //        
    document.getElementById("comment-button").addEventListener("click",async function(){
        
        commentBox.style.visibility=commentBox.style.visibility==="visible"?"hidden":"visible";

        if(commentBox.style.visibility!="visible"){
            return 0
         
        }
        const response=await fetch(`/api/v1/post/${postId}/comments`,{method:"GET"})
        const content=await response.json()
        const comments=content.data.comments
        console.log(comments)
        if(!comments){return 0 }

        
        comments.forEach(comment => { addComment(comment)});
    })
    commentForm.addEventListener("submit",async(event)=>{
        try {
            event.preventDefault()
    
            const content=input.value 
            if(content===""){return 0}
            const response=await fetch(`/api/v1/post/${postId}/comment`,{method:"POST",headers:{
                "Content-Type":"application/json"
            },body:JSON.stringify({content:content})})
            const jsondata=await response.json();
           
                if(jsondata.success){input.value=""}
           
            const {comment,author,avatar}=jsondata.data
           
    
            const newComment=document.createElement("div")
            newComment.classList.add("comment")
    
            const authorElement=document.createElement("p")
            authorElement.classList.add("author")
            authorElement.textContent=author
    
            const avatarElement=document.createElement("img")
            avatarElement.classList.add("comment-avatar");
            avatarElement.src=avatar
    
            const p=document.createElement("p")
            p.textContent=comment
    
            p.classList.add("content")
    
    
            
            
            
            newComment.appendChild(avatarElement)
           
            newComment.appendChild(authorElement)
            newComment.appendChild(p)
            
            commentContent.insertBefore(newComment, commentContent.firstChild);
            
          
         
    
           
    
            
        } catch (error) {
            console.log(error)
            
        }
    })

   


function addComment(comment) {
    let commentElement = document.createElement("div");
    commentElement.classList.add("comment");

    let avatar = document.createElement("img");
    avatar.src = comment.author.avatar;
    avatar.alt = "avatar";
    avatar.classList.add("avatar");

    let author = document.createElement("p");
    author.textContent = comment.author.username;
    author.classList.add("author");

    let content = document.createElement("p");
    content.textContent = comment.content;
    content.classList.add("content");

    commentElement.appendChild(avatar);
    commentElement.appendChild(author);
    commentElement.appendChild(content);

 
    const currentUserId = "<%= user._id %>";
    if (currentUserId === comment.author._id) {
        let deleteButton = document.createElement("delete-btn");
        deleteButton.textContent ="Delete";
        deleteButton.classList.add("delete-btn");

        deleteButton.addEventListener("click", async () => {
            console.log("Delete button clicked");
            try {
                const deleteResponse = await fetch(`/api/v1/post/${postId}/comment/delete/${comment._id}`, {
                    method: "DELETE"
                });
                if (deleteResponse.ok) {
                    commentElement.remove();
                    console.log("Comment deleted successfully");
                } else {
                    console.error("Failed to delete comment");
                }
            } catch (error) {
                console.error("Error deleting comment:", error);
            }
        });
        commentElement.appendChild(deleteButton);
        commentContent.appendChild(commentElement);
        
    }

    commentContent.appendChild(commentElement);
}
});
</script>



